# An equivalent external application.properties file needs to be provided for application customization.
# java -jarrdbms2hive-validator.jar --spring.config.location=file:/application.properties -Xmx2048M -Xss256K -Xmx2048m -XX:MaxPermSize=512m
# If no external configuration file is provided application will use this file

# TERADATA  source configuration
spring.sourceDatabase.system=Mysql
spring.sourceDatabase.servername=127.0.0.1:3306
spring.sourceDatabase.databaseName=dv_test1
spring.sourceDatabase.url=jdbc:mysql://${spring.sourceDatabase.servername}/${spring.sourceDatabase.databaseName}
spring.sourceDatabase.username=root
spring.sourceDatabase.password=root
spring.sourceDatabase.driver-class-name=com.mysql.jdbc.Driver
spring.sourceDatabase.initialSize=10
spring.sourceDatabase.maxActive=10
spring.sourceDatabase.minIdle=10
spring.sourceDatabase.maxIdle=10
spring.sourceDatabase.maxWait=100000


# HAWQ data source configuration
spring.targetDatabase.system=Mysql
spring.targetDatabase.servername=127.0.0.1:3306
spring.targetDatabase.databaseName=dv_test2
spring.targetDatabase.url=jdbc:mysql://127.0.0.1:3306/dv_test2
spring.targetDatabase.username=root
spring.targetDatabase.password=root
spring.targetDatabase.driver-class-name=com.mysql.jdbc.Driver
spring.targetDatabase.initialSize=10
spring.targetDatabase.maxActive=10
spring.targetDatabase.minIdle=10
spring.targetDatabase.maxIdle=10
spring.targetDatabase.maxWait=100000




# pass phrase used to while encrypting and decrypting property vales
# 'jasypt.encryptor.password' value can be any thing but we have to use same value while encrypting a property
# command to encrypt
# java -cp jasypt-1.9.2.jar  org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input="property value that need to be encrypted" password=Rdbms2hiveValidator algorithm=PBEWithMD5AndDES verbose=false
# e.g., java -cp jasypt-1.9.2.jar  org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input="SQLserver2008" password=Rdbms2hiveValidator algorithm=PBEWithMD5AndDES verbose=false
# a3nG3hSj+i/L/8jh+Em++qi2SEaWfZNe
jasypt.encryptor.password=Rdbms2hiveValidator


# logging related configuration
logging.file=/var/log/rdbms2hive-validator.log
logging.level.root=INFO
logging.level.org.springframework.web=WARN
logging.pattern.console=%d [%t] ${PID} %-5p %c:%L --- %m%n
logging.pattern.file=%d [%t] ${PID} %-5p %c:%L --- %m%n


# Source data base tables configuration file location
# Value of this property should be absolute path file path
database.metadata.config.file.location=file:conf/datavalidator-config.xml

#This property defines whether metadata check is required for validation. Useful in case of views or limited table access. Metadata check will not happen
db.compare.metadata.values=true

# Data types mapping information file configuration
# Value of this property should be absolute path file path
database.data.type.mapping.file.location=file:conf/data-types.properties

# database meta data reports folder location
# Make sure this directory exists before generating report
database.metadata.reports.folder.location=reports/

# Directory location in which custom style sheets are defined for report generation
# This folder should have 'css' and 'img' folders with required style sheets and images
# Default styles are provided as part of configuration files
app.style.folder.location=/conf/style/


# This property defines list of comma separated columns in hive table those will be excluded while comparing the actual table data 
db.table.column.exclude.list=
# If 'db.compare.data.for.metadata.mismatch' value is true then even there is a meta data mismatch application proceeds with data comparison.
# Default value is true 
db.compare.data.for.metadata.mismatch=true

# default no of rows that are required to be validated while performing data comparison
# This value can be overridden at each table level by configuring 'rowCountToValidate' element value in 'sql-server-metadata-config.xml' file
default.row.count.to.validate = 10


# Client name which will be displayed in summary report
client.name=Citi GDM